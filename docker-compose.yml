# define the network
networks:
  app-network:
    driver: ${NETWORKS_DRIVER}

# start the services section
services:

  nginx:
    build:
      context: .
      dockerfile: .docker/nginx/Dockerfile
      args:
        - NGINX_VERSION=1.21.5-alpine
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TZ=${TIMEZONE}
        - DOMAIN_NAME=${DOMAIN_NAME} # Use the variable from the .env file
    container_name: starfish_nginx
    tty: true
    env_file:
      - .env
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    networks:
      app-network:
        aliases:
          - ${APP_HOST}
    depends_on:
      - php-fpm
    links:
      - php-fpm

  php:
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
      args:
        - ALPINE_VERSION=3.19
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER?}
        - APP_GROUP_ID=${APP_GROUP_ID?}
        - APP_GROUP_NAME=${APP_GROUP_NAME?}
        - APP_USER_ID=${APP_USER_ID?}
        - APP_USER_NAME=${APP_USER?}
        - TARGET_PHP_VERSION=${PHP_VERSION?}
        - APP_ENV=${APP_ENV?}
    image: php-base:latest
    container_name: starfish_php
    hostname: php
    networks:
      - app-network

  php-fpm:
    build:
      context: .
      dockerfile: .docker/php/fpm/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_USER_NAME=${APP_USER_NAME}
        - TARGET_PHP_VERSION=${PHP_VERSION?}
    container_name: starfish_php_fpm
    hostname: php-fpm
    ports:
      - "9000:9000"
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - vendor_data:${APP_CODE_PATH_CONTAINER}/vendor
    networks:
      - app-network
    depends_on:
      - php

#  app:
#    build:
#      context: .
#      dockerfile: .docker/php/app/Dockerfile
#      args:
#        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
#        - APP_GROUP=${APP_GROUP}
#        - APP_GROUP_ID=${APP_GROUP_ID}
#        - APP_USER=${APP_USER}
#        - APP_USER_ID=${APP_USER_ID}
#        - TZ=${TIMEZONE}
#        - TARGET_PHP_VERSION=${PHP_VERSION}
#    container_name: starfish_app
#    volumes:
#      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
#      - vendor_data:${APP_CODE_PATH_CONTAINER}/vendor
#    ports:
#      - "${WORKSPACE_HOST_SSH_PORT}:22"
#    networks:
#      - app-network

  node:
    build:
      context: .
      dockerfile: .docker/node/Dockerfile
      args:
        ALPINE_VERSION: ${ALPINE_VERSION}
        TARGET_NODE_VERSION: ${NODE_VERSION}
        TARGET_NPM_VERSION: ${NPM_VERSION}
        APP_CODE_PATH: ${APP_CODE_PATH_CONTAINER}
    container_name: node
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    depends_on:
      - php-fpm
    networks:
      app-network:
    command: ["sh", "-c", "npm install && npm run dev"]


  mysql:
    build:
      context: .
      dockerfile: .docker/mysql/Dockerfile
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: envx
      MYSQL_USER: app
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: starfish
    container_name: starfish_mysql
    networks:
      - app-network
    volumes:
      - db_data:/var/lib/mysql
    depends_on:
      - php-fpm

volumes:
  vendor_data:
    driver: local
  db_data:
    driver: local