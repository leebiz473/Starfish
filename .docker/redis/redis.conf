# Enable password authentication to secure access
requirepass root

# Limit maximum memory usage (optional, adjust based on your use case)
maxmemory 256mb
maxmemory-policy allkeys-lru

## Ensure Redis only listens on localhost or internal network for security
# Listens on all available interfaces. It’s good for Dockerized environments to allow internal network connections.
bind 0.0.0.0
# Ensures Redis runs in a protected mode, disallowing outside connections without authentication.
protected-mode yes

## Set save points for persistence (optional, adjust based on your use case)
# Redis will save the dataset every 60 seconds if at least 10,000 changes occur
save 60 10000

## Enable append-only file persistence for data durability
# Appends all writes to an append-only file for durability (data recovery on failure).
# everysec ensures Redis writes changes to disk every second.
# If you don’t need persistence (i.e., Redis as a cache), you can disable persistence by setting appendonly no.
appendonly yes
appendfsync everysec

# Set a timeout value to close idle connections (optional, for security)
timeout 300

## Use Redis for specific use cases: disable command renaming to mitigate command injection risks
# Renaming or disabling certain dangerous commands (FLUSHDB, FLUSHALL, SHUTDOWN, CONFIG)
# This can help mitigate risks of accidental or malicious data loss, especially when exposing Redis to external networks.
# Disable the FLUSHDB command
rename-command FLUSHDB ""
# Disable the FLUSHALL command
rename-command FLUSHALL ""
# Disable the CONFIG command
rename-command CONFIG ""
# Disable the SHUTDOWN command
rename-command SHUTDOWN ""

# Optional: Set Redis to operate as a cache or with limited data persistence
# Append-only file persistence (sets Redis to log every write operation)
# Only enable if you need it. For purely caching, consider turning it off to save resources.
appendonly yes
appendfsync everysec

## Set a maximum number of connected clients to prevent overloading
maxclients 10000

## Enable slowlog to capture slow queries for debugging performance issues (optional)
# Logs queries that take longer than 10 milliseconds, which helps to identify performance bottlenecks.
slowlog-log-slower-than 10000
slowlog-max-len 128

## Use a unique database number for your use case (default is 0)
databases 16